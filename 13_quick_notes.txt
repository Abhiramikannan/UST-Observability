1. ALERTS
          I learned about how to create and manage alerts in Grafana.
          Setting threshold -> so that if the threshold goes beyond that have setted -> notify it as an alert in the contact point(webhook)
          
         Notification template: It will make the alert well structured and can fetch the live data  from the alert labels/ annotations.(eg : instance name,cpu value)

         Annotations: Markers shown in graph to see what happened.

         Notification policy: It will make all alert msg(similar alerts) as a single msg (grouping) and forwards to particular team. eg: database related alert -> database team

          Alerts can improve 
                    end users experience(performance issues-user get a smooth and reliable service)
                    reduce downtime
                    faster fixes(alerts notify them quickly so fix them fast before affecting it bad)

2. ERROR BUDGET AND BURN RATE:
            Error budget : allowed failure eg: if SLA is 99% uptime ,error budget is 0.1 %
            Burn rate: How fast u r using ur error budget
                    eg: in 1 month allowed downtime is 43 mins
                    normal burn rate: in 15 days ,20 mins downtime happened -> safe
                    High burn rate: in 1 day 40 min down time happened -> very high risk

3. METRICES:
          RED = Rate, Errors, Duration(used in microservices,API monitoring) 
          How many req are coming , how many fail, how long they take
          
          USE =  Utilization,Saturation,Errrors.(monitoring resources- used in infrastructure/resources like cpu,memory,disk
          	  •  Utilization → How much of a resource is being used (CPU %, memory usage)
              •  Saturation → How “full” it is (queue length, waiting processes)
              •  Errors → Hardware or system errors


4. DASHBOARD: what all i know still now?

          panels creation
          visualization type
          datasource(infinity,testdata,prometheus,loki)
          colour coded threshhold
          unit
          
5. GOOGLES GOLDEN SIGNALS:

          traffic
          latency
          errors
          saturation : How overloaded ur system resources ? heavy load -> system breaks

6. SLA AND SLO UPTIME:

          SLA = b/w company and  customers.
                promise them 99.9% uptime ,if not give refund

          SLO = internal objective for teams
                teams target(99.9% uptime)

          SLI = actual measurement of metric
                metric is uptime,errors,latency
                calculated by anytime

7. What end users except from dashboards?

          simplicity: data should be clear not overloaded with too many panels -> it shows from the first look -> is my system healthy?
          Relavance: shows only what matters to them(uptime for business users, error for developers)
          visualization: graph,stat,table ..coloured threshold to highlight problem with colours
          Problem: point to where problem is
          Reliability: data should be live and accurate and trustable
                              reliability means:  users should trust the system
                                                  available when they needs
                                                  works well without any unexpected failure

8. 4xx AND 5XX ERRORS?

                    4xx errors → Client-side issue
                    The problem is in the request sent by the user/browser.
                    Example: Trying to open a page that doesn’t exist → 404 Not Found
                    
                    5xx errors → Server-side issue
                    The problem is in the server while processing the request.
                    Example: Website is up, but the server crashes while handling your request → 500 Internal Server Error

9. Compliance?
                    set of rules that companies need to follow
                    companies should install security patches.
                    They must protect sensitive data..like  customer info.
                    some companies need to follow regulations like HIPPA.
                    if a system meets these all -> compliant
                    otherwise -> no.

10. INDEX in SPLUNK?
          Instead of reading the entire raw file line by line every time, Splunk stores data in an optimized index structure.
          Like a memory, Fetching the results faster
          An index in Splunk organizes and stores data so it can be searched quickly.
          It creates special metadata (like tags) for important fields.
          This helps Splunk find the data you want super fast when you search.

          The index is created to organize data and make searching much faster and efficient.
          Without indexing, searching through all raw data would take a lot of time.
          So, indexing helps Splunk find the right data quickly.
