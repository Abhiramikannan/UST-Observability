link: https://grafana.com/blog/2025/02/05/how-to-visualize-csv-data-with-grafana/
connections -> data source -> infinity

1. INFINITY DATASOURCE:
    Infinity datasource lets Grafana pull data from different sources like CSV, JSON, XML, or Google Sheets that are available online.
    Access parameters →
      Sometimes, the data source you want to connect to is protected (for example, requires an API key or Bearer token). In that case, you’d configure authentication details here.
      If it’s public data, no extra setup is needed. If it’s private, you’d add authentication (like bearer tokens).

2. create dashboard -> add visualization -> create with the instructions from the above link
        select datasource that u created (infinity) -> csv -> get -> url -> table

3. What is VISUALIZATION TYPE (right side while adding the visualization) while configuring the dashboard?
            It indicates how u want to see ur data
            
            1. Table visualization: 
                    data shown in table and rows
            2. Geomap visualization:
                      Data is plotted on a map (world map, region map, or custom map).

            Table = good for detailed raw/structured data
            Geo Data = good for visualizing metrics by location

4. TRANSFORMATIONS:
           In Grafana, when you pull data from a data source (like CSV, Prometheus, InfluxDB, etc.), 
           the data might not always be in the exact format you want for visualization. That’s where Transformations come in.
           Transformations let you modify, filter, join, or restructure your query results before displaying them in a panel.
                    ur panel -> querry type -> transformations
   

RESULT:
    The dashboard i configured will show the static dataset (Geo data + table).

5. END USERS OF DASHBOARD?
        developers - check dashboard to debug application issues, failures after the deployment.
        managers/Product Owners- they want to see business level metrices like check revenue impacting issues, latency, user signup,no of req served
        Sre/Dveops Engineer - monitor systems uptime,errors to make service reliable
        support teams- user impacting problems

6. What end users expect from the Observability team?
                    single dashboard -> shows Is my system healthy?
                    Give trends overtime -> not just current values, but historical data (eg: cpu usage spike over last 24 hrs)
                    Highlight problems -> errors,alerts,latency

7. How to add datasource?
            connections ->datasource ->add datasource ->(testdata,infinity,prometheous,loki)


8. What all can in dashboards?
        Threshholds -> To show good or bad ... users see green = good , red =bad

9. How to create dashboard?
            1. adding datasource
            2. create dashboard -> add visualization
            3. add panel -> give data 
            4. if testdata -> select csv content to add csv data
            5. visualization -> right top corner -> we can change to any type (table,stat,geomap..)
            6. add visualization to add more panels.
            7. In panels we can set threshhold colour(search threshhold for each metric),(search cel for each metric for coloured bg), (search unit->misk-> percent ->also decimal)
            8. drag the panels to make it arranged

        
    
